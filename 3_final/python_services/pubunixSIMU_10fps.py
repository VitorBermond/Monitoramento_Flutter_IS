import pika
import json
import time
from datetime import datetime

# Conexão com RabbitMQ
connection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))
channel = connection.channel()

# Filas
filas = {
    "FPS": "Data.FPS",
    "ET": "Data.TE",
    "PT": "Data.PT",
    "SPEED": "Data.SPEED",
    "CPU": "Data.CPU",
    "GPU": "Data.GPU"
}

for fila in filas.values():
    channel.queue_declare(queue=fila)

# ---------- DADOS DEFINIDOS MANUALMENTE ----------

fps_list = [10] * 120

et_list = [
    300, 320, 340, 360, 390, 420, 424, 427, 427, 422,
    418.12, 409.23, 400.35, 391.47, 382.58, 373.7, 364.81, 355.93, 347.05,
    338.16, 329.28, 320.4, 311.51, 302.63, 293.74, 284.86, 275.98, 267.09, 258.21,
    249.33, 240.44, 231.56, 222.67, 213.79, 204.91, 196.02, 187.14, 178.26, 169.37,
    160.49, 151.6, 140, 129.84, 116.95, 102.07, 94.19, 85.3, 73.42, 62.53,
    52.65, 42.77, 41, 32, 25, 14, 10, 12, 15, 11,
    39, 34, 21, 21, 42, 65, 76, 50, 55, 48,
    44, 42, 40, 46, 46, 49, 42, 49, 54, 58,
    66, 65, 60, 58, 55, 53, 60, 67, 76, 86,
    96, 108, 115.0, 124.11, 137.02, 151, 155, 147, 140, 132.2,
    122, 115, 110.29, 100.63, 93.84, 83.37, 75.64, 68, 54, 44.31,
    42, 37.49, 32.4, 29.1, 45, 54, 43, 42.54, 36.71, 26.28, 25.05
]

pt_list = [
    0.60362, 0.60491, 0.56528, 0.55377, 0.59429, 0.5524, 0.59439, 0.57613, 0.57058, 0.60122,
    0.5635, 0.59883, 0.56261, 0.5997, 0.59796, 0.57914, 0.5911, 0.5831, 0.5748, 0.60474,
    0.56229, 0.56348, 0.58448, 0.59992, 0.5989, 0.56711, 0.55563, 0.59511, 0.59186, 0.55597,
    0.57117, 0.60252, 0.57014, 0.55868, 0.57131, 0.59868, 0.56055, 0.56053, 0.56196, 0.59265,
    0.59006, 0.59107, 0.5917, 0.60328, 0.5842, 0.58888, 0.5628, 0.56226, 0.59753, 0.56101,
    0.59289, 0.6017, 0.56315, 0.56926, 0.58841, 0.60344, 0.55379, 0.59799, 0.55987, 0.57947,
    0.58864, 0.57194, 0.56452, 0.59802, 0.55745, 0.57846, 0.58445, 0.5834, 0.56586, 0.5567,
    0.55468, 0.56685, 0.58012, 0.58452, 0.60169, 0.56066, 0.55384, 0.59796, 0.58227, 0.5618,
    0.5724, 0.59012, 0.5789, 0.56663, 0.57099, 0.55912, 0.58273, 0.55646, 0.58644, 0.60373,
    0.56573, 0.60225, 0.5869, 0.57888, 0.57356, 0.56711, 0.59424, 0.55909, 0.56544, 0.56557,
    0.5738, 0.59059, 0.58969, 0.58452, 0.57004, 0.59697, 0.59663, 0.56968, 0.55563, 0.56273,
    0.56313, 0.60359, 0.55684, 0.56196, 0.5595, 0.59988, 0.56679, 0.58491, 0.5763, 0.60368
]

speed_list = [
  348, 348, 349, 348, 348, 349, 349, 349, 349, 349,  
  350, 352, 355, 360, 370, 390, 415, 440, 470, 500,  
  535, 560, 580, 570, 555, 535, 510, 485, 460, 435,  
  415, 400, 385, 375, 368, 360, 355, 350, 348, 347, 
  346, 345, 345, 345, 345, 345, 345, 345, 345, 345,  
  346, 347, 348, 350, 352, 355, 360, 370, 385, 400,  
  420, 440, 460, 480, 505, 525, 540, 550, 545, 530,  
  510, 485, 465, 445, 425, 410, 395, 385, 375, 365,
  358, 352, 348, 345, 344, 343, 342, 342, 342, 342,
  342, 343, 344, 345, 346, 347, 347, 348, 348, 348,
  347, 346, 345, 345, 344, 344, 343, 343, 342, 342,
  342, 342, 342, 342, 342, 342, 342, 342, 342, 342
]

cpu_list = [
    53.49, 58.84, 54.3, 58.28, 51.17, 54.42, 57.96, 58.72, 56.08, 52.35,
    53.87, 58.46, 52.91, 57.63, 52.83, 53.5, 58.67, 55.2, 57.63, 52.72,
    58.29, 52.05, 57.81, 55.7, 57.34, 56.17, 53.17, 55.08, 58.31, 52.69,
    56.51, 55.36, 52.84, 51.64, 51.89, 57.08, 58.61, 56.69, 56.62, 57.66,
    58.66, 56.68, 58.63, 56.5, 54.08, 57.39, 56.86, 52.62, 56.02, 58.27,
    56.39, 54.42, 53.45, 52.55, 52.67, 53.88, 56.87, 52.69, 57.84, 56.73,
    58.43, 58.82, 52.7, 53.27, 56.2, 54.42, 57.65, 57.89, 57.9, 53.65,
    55.99, 53.74, 58.28, 58.65, 56.61, 58.95, 55.48, 58.03, 52.9, 56.65,
    58.75, 55.28, 53.66, 55.52, 55.36, 52.9, 56.29, 57.56, 52.73, 56.49,
    53.11, 56.41, 56.88, 57.86, 57.35, 57.18, 53.14, 55.86, 56.17, 56.45,
    56.23, 58.25, 54.07, 54.34, 52.97, 58.36, 52.13, 52.85, 56.61, 58.75,
    56.2, 56.14, 57.29, 56.35, 58.47, 53.34, 57.76, 56.98, 57.84, 57.41
]

gpu_list = [
    76.53, 74.12, 77.94, 72.38, 75.63, 69.45, 78.21, 74.88, 76.79, 71.36,
    75.51, 72.89, 70.42, 78.7, 80.43, 75.36, 73.87, 71.2, 76.58, 79.71,
    70.93, 77.25, 74.5, 75.11, 76.68, 78.92, 74.76, 80.14, 79.4, 71.77,
    75.85, 73.14, 70.64, 76.91, 75.67, 72.16, 78.46, 74.21, 70.84, 76.75,
    79.02, 73.62, 72.83, 69.99, 80.87, 77.42, 75.33, 71.94, 76.1, 78.73,
    74.38, 75.77, 77.9, 70.71, 79.13, 77.64, 73.03, 74.6, 80.24, 69.88,
    75.49, 76.95, 72.51, 74.03, 71.81, 76.38, 79.96, 70.3, 78.12, 73.74,
    72.11, 74.99, 75.27, 76.69, 77.1, 69.33, 79.84, 78.63, 71.42, 73.58,
    74.65, 77.3, 76.86, 75.08, 72.72, 74.53, 71.6, 80.59, 78.44, 77.17,
    70.56, 74.47, 77.76, 76.28, 75.18, 79.31, 72.45, 71.01, 73.33, 78.01,
    74.19, 76.61, 72.85, 80.73, 79.5, 75.64, 71.72, 73.91, 76.08, 78.88,
    75.98, 77.52, 72.62, 69.76, 74.71, 79.68, 76.23, 73.45, 75.06, 70.68
]


num_pontos = len(fps_list)

# ---------- LOOP DE PUBLICAÇÃO ----------

i = 0
while i < num_pontos:
    timestamp = int(time.time())

    mensagens = {
        "FPS":   {"FPS": fps_list[i], "timestamp": timestamp},
        "ET":    {"trajectory_error": et_list[i], "timestamp": timestamp},
        "PT":    {"tags": {"Tempo de Processamento (ms)": pt_list[i]}, "timestamp": timestamp},
        "SPEED": {"speed": speed_list[i], "timestamp": timestamp},
        "CPU":   {"cpu_usage": cpu_list[i], "timestamp": timestamp},
        "GPU":   {"gpu_usage": gpu_list[i], "timestamp": timestamp},
    }

    for chave, payload in mensagens.items():
        channel.basic_publish(
            exchange='',
            routing_key=filas[chave],
            body=json.dumps(payload)
        )

    print(f"[{datetime.fromtimestamp(timestamp)}] Publicado ponto {i+1}/{num_pontos}")
    
    i = (i + 1)
    #time.sleep(1/2.5)
