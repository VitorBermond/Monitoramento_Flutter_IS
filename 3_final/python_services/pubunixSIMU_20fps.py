import pika
import json
import time
from datetime import datetime

# Conexão com RabbitMQ
connection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))
channel = connection.channel()

# Filas
filas = {
    "FPS": "Data.FPS",
    "ET": "Data.TE",
    "PT": "Data.PT",
    "SPEED": "Data.SPEED",
    "CPU": "Data.CPU",
    "GPU": "Data.GPU"
}

for fila in filas.values():
    channel.queue_declare(queue=fila)

# ---------- DADOS DEFINIDOS MANUALMENTE ----------

fps_list = [
16.67, 16.11, 17.03, 17.01, 15.98, 17.58, 17.22, 16.55, 17.41, 15.89,
16.60, 16.32, 17.69, 15.75, 15.96, 17.65, 17.46, 16.94, 16.88, 16.44,
15.85, 16.37, 17.63, 15.73, 16.28, 17.14, 17.15, 16.09, 17.10, 15.99,
16.95, 16.87, 15.93, 16.01, 16.62, 16.12, 16.43, 17.52, 16.47, 16.99,
17.47, 16.39, 16.59, 16.08, 17.55, 16.86, 15.81, 17.12, 17.24, 15.76,
17.44, 16.73, 16.18, 16.07, 17.13, 15.82, 16.66, 16.00, 15.95, 17.69,
16.05, 16.45, 17.00, 15.88, 17.39, 16.53, 16.96, 16.22, 15.91, 16.15,
17.25, 16.93, 16.30, 17.03, 15.90, 15.74, 17.08, 16.78, 17.51, 15.83,
16.70, 15.97, 16.85, 16.83, 17.66, 16.20, 17.20, 16.51, 15.87, 16.29,
17.60, 17.29, 16.10, 16.13, 16.03, 16.98, 17.68, 15.86, 17.26, 16.04,
15.92, 17.38, 16.74, 16.19, 17.28, 16.06, 15.77, 17.18, 17.05, 15.94,
17.06, 16.41, 17.30, 16.16, 16.63, 17.09, 15.78, 17.61, 16.14, 17.04
]


et_list = [
    300, 320, 340, 360, 390, 420, 424, 427, 427, 422,
    418.12, 409.23, 400.35, 391.47, 382.58, 373.7, 364.81, 355.93, 347.05,
    338.16, 329.28, 320.4, 311.51, 302.63, 293.74, 284.86, 275.98, 267.09, 258.21,
    249.33, 240.44, 231.56, 222.67, 213.79, 204.91, 196.02, 187.14, 178.26, 169.37,
    160.49, 151.6, 140, 129.84, 116.95, 102.07, 94.19, 85.3, 73.42, 62.53,
    52.65, 42.77, 41, 32, 25, 14, 10, 12, 15, 11,
    26.52, 23.12, 14.28, 14.28, 28.56, 44.20, 51.68, 34.00, 37.40, 32.64,
    29.92, 28.56, 27.20, 31.28, 31.28, 33.32, 28.56, 33.32, 36.72, 39.44,
    44.88, 44.20, 40.80, 39.44, 37.40, 36.04, 40.80, 45.56, 51.68, 58.48,
    65.28, 73.44, 78.20, 84.39, 93.18, 102.68, 105.40, 99.96, 95.20, 89.90,
    82.96, 78.20, 75.00, 68.43, 63.81, 56.69, 51.43, 46.24, 36.72, 30.13,
    28.56, 25.50, 22.03, 19.78, 30.60, 36.72, 29.24, 28.93, 24.96, 17.87, 17.03


]

pt_list = [
    0.60232, 0.59791, 0.61565, 0.61925, 0.60811, 0.61431, 0.60780, 0.59103, 0.59604, 0.60796,
    0.58065, 0.61194, 0.59106, 0.61061, 0.61512, 0.58725, 0.61627, 0.61805, 0.59126, 0.60217,
    0.61531, 0.58754, 0.59515, 0.61148, 0.61919, 0.60558, 0.60875, 0.61513, 0.58231, 0.58454,
    0.61004, 0.59318, 0.60537, 0.58048, 0.59394, 0.61684, 0.58910, 0.58595, 0.61372, 0.61782,
    0.60438, 0.60855, 0.61935, 0.59469, 0.61253, 0.59006, 0.58133, 0.58470, 0.59165, 0.61372,
    0.58770, 0.58144, 0.58897, 0.58867, 0.61462, 0.61773, 0.58600, 0.59951, 0.60622, 0.60481,
    0.61608, 0.61470, 0.60664, 0.59685, 0.58256, 0.58647, 0.60488, 0.59983, 0.58544, 0.60051,
    0.60628, 0.61274, 0.60114, 0.60600, 0.61807, 0.60861, 0.59610, 0.60286, 0.59763, 0.61587,
    0.60325, 0.60373, 0.59765, 0.59770, 0.59308, 0.59361, 0.58464, 0.61012, 0.58900, 0.58384,
    0.59555, 0.58407, 0.59604, 0.61241, 0.59547, 0.58430, 0.59260, 0.59735, 0.58765, 0.59468,
    0.61335, 0.61776, 0.58011, 0.60360, 0.58581, 0.60515, 0.61158, 0.60130, 0.61341, 0.60345,
    0.59559, 0.59447, 0.59758, 0.59218, 0.61311, 0.59091, 0.61769, 0.58712, 0.58292, 0.61807
]


speed_list = [
  348, 348, 349, 348, 348, 349, 349, 349, 349, 349,  
  350, 352, 355, 360, 370, 390, 415, 440, 470, 500,  
  535, 560, 580, 570, 555, 535, 510, 485, 460, 435,  
  415, 400, 385, 375, 368, 360, 355, 350, 348, 347, 
  346, 345, 345, 345, 345, 345, 345, 345, 345, 345,  
  346, 347, 348, 350, 352, 355, 360, 370, 385, 400,  
  420, 440, 460, 480, 505, 525, 540, 550, 545, 530,  
  510, 485, 465, 445, 425, 410, 395, 385, 375, 365,
  358, 352, 348, 345, 344, 343, 342, 342, 342, 342,
  342, 343, 344, 345, 346, 347, 347, 348, 348, 348,
  347, 346, 345, 345, 344, 344, 343, 343, 342, 342,
  342, 342, 342, 342, 342, 342, 342, 342, 342, 342
]

cpu_list = [
    53.49, 58.84, 54.3, 58.28, 51.17, 54.42, 57.96, 58.72, 56.08, 52.35,
    53.87, 58.46, 52.91, 57.63, 52.83, 53.5, 58.67, 55.2, 57.63, 52.72,
    58.29, 52.05, 57.81, 55.7, 57.34, 56.17, 53.17, 55.08, 58.31, 52.69,
    56.51, 55.36, 52.84, 51.64, 51.89, 57.08, 58.61, 56.69, 56.62, 57.66,
    58.66, 56.68, 58.63, 56.5, 54.08, 57.39, 56.86, 52.62, 56.02, 58.27,
    56.39, 54.42, 53.45, 52.55, 52.67, 53.88, 56.87, 52.69, 57.84, 56.73,
    58.43, 58.82, 52.7, 53.27, 56.2, 54.42, 57.65, 57.89, 57.9, 53.65,
    55.99, 53.74, 58.28, 58.65, 56.61, 58.95, 55.48, 58.03, 52.9, 56.65,
    58.75, 55.28, 53.66, 55.52, 55.36, 52.9, 56.29, 57.56, 52.73, 56.49,
    53.11, 56.41, 56.88, 57.86, 57.35, 57.18, 53.14, 55.86, 56.17, 56.45,
    56.23, 58.25, 54.07, 54.34, 52.97, 58.36, 52.13, 52.85, 56.61, 58.75,
    56.2, 56.14, 57.29, 56.35, 58.47, 53.34, 57.76, 56.98, 57.84, 57.41
]

gpu_list = [
    94.0, 94.67, 95.33, 96.0, 96.67, 97.33, 98.0, 98.67, 99.33, 100.0,
    100.0, 100.0, 100.0, 100.0, 99.71, 99.95, 100.0, 100.0, 99.2, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.92, 98.54, 100.0, 100.0,
    100.0, 100.0, 99.55, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.11, 100.0, 100.0,
    100.0, 100.0, 98.5, 100.0, 100.0, 98.25, 99.2, 100.0, 100.0, 100.0,
    100.0, 99.05, 99.03, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0,
    100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.68, 100, 100
]



num_pontos = len(fps_list)

# ---------- LOOP DE PUBLICAÇÃO ----------

i = 0
while i < num_pontos:
    timestamp = int(time.time())

    mensagens = {
        "FPS":   {"FPS": fps_list[i], "timestamp": timestamp},
        "ET":    {"trajectory_error": et_list[i], "timestamp": timestamp},
        "PT":    {"tags": {"Tempo de Processamento (ms)": pt_list[i]}, "timestamp": timestamp},
        "SPEED": {"speed": speed_list[i], "timestamp": timestamp},
        "CPU":   {"cpu_usage": cpu_list[i], "timestamp": timestamp},
        "GPU":   {"gpu_usage": gpu_list[i], "timestamp": timestamp},
    }

    for chave, payload in mensagens.items():
        channel.basic_publish(
            exchange='',
            routing_key=filas[chave],
            body=json.dumps(payload)
        )

    print(f"[{datetime.fromtimestamp(timestamp)}] Publicado ponto {i+1}/{num_pontos}")
    
    i = (i + 1)
    #time.sleep(1/2.5)
